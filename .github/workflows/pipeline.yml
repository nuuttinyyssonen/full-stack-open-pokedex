name: deployment pipeline

on:
    push:
        branches:
            - master
    pull_request:
        branches: [master]
        types: [opened, synchronize]
jobs:
    simple_deployment_pipeline:
        runs-on: ubuntu-20.04
        timeout-minutes: 4
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "16"
            - name: npm install dependencies
              run: npm install
            - name: Run Lint
              run: npm run eslint
            - name: Build
              run: npm run build
            - name: Run tests
              run: npm run test
            - name: e2e tests
              uses: cypress-io/github-action@v5
              with:
                command: npm run test:e2e
                start: npm run start-prod
                wait-on: http://localhost:5000
            - name: Trigger deployment
              if: ${{ github.event_name == 'push' }}
              run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}                   

    tag_release:
         needs: [simple_deployment_pipeline]
         runs-on: ubuntu-20.04
         steps:
            - uses: actions/checkout@v2
            - name: Github Tag Bump
              if: ${{ github.event_name == 'push' }}
              uses: anothrNick/github-tag-action@1.67.0
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                DEFAULT_BUMP : patch
    a_test_job:
        runs-on: ubuntu-20.04
        steps:
          - uses: actions/checkout@v2
          - name: github context
            env:
              GITHUB_CONTEXT: ${{ toJson(github) }}
            run: echo "$GITHUB_CONTEXT"
          - name: commits
            env:
              COMMITS: ${{ toJson(github.event.commits) }}
            run: echo "$COMMITS"
          - name: commit messages
            env:
              COMMIT_MESSAGES: join(toJson(github.event.commits.*.message), ' ')
            run: echo "$COMMIT_MESSAGES"
                
